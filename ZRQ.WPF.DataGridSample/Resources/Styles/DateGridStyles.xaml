<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--DataGrid表头居中-->
    <Style x:Key="DateGridHeader"
           TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    </Style>

    <!--DataGri TextBlock 内容居中-->
    <Style x:Key="DateGridTextBlockStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="3" />
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
    </Style>

    <!--DataGri CheckBox 内容居中-->
    <Style x:Key="DateGridCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="3" />
    </Style>

    <!--DataGri 单元格 内容居中-->
    <Style x:Key="DataGridContentCentering"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton"
                     TargetType="ToggleButton">
        <Border  VerticalAlignment="Center"
                 HorizontalAlignment="Left"
                 Cursor="Hand">
            <Path Name="path"
                  Data="M 5,4 L 5,11 L 11,7.5 Z"
                  Fill="Black" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="path"
                        Property="Data"
                        Value="M 4,5 L 11,5 L 7.5,11 Z"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ExpanderStyle"
           TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Name="ContentRow"
                                           Height="0"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Name="border"
                                BorderThickness="0,0,0,1"
                                BorderBrush="#F2F2F2"
                                Background="White">
                            <WrapPanel>
                                <ToggleButton Margin="0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                              OverridesDefaultStyle="True"
                                              Template="{StaticResource ExpanderToggleButton}" />
                                <ContentPresenter  Margin="0,0,0,0"
                                                   VerticalAlignment="Center"
                                                   ContentSource="Header"
                                                   RecognizesAccessKey="True" />
                            </WrapPanel>
                        </Border>
                        <ContentPresenter Grid.Row="1"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Setter TargetName="ContentRow"
                                    Property="Height"
                                    Value="{Binding ElementName=Content, Path=DesiredHeight}" />
                            <!--<Setter TargetName="border" Property="BorderThickness" Value="0 0 0 1" />-->
                        </Trigger>
                        <!--<Trigger Property="IsExpanded" Value="false">
                                                <Setter TargetName="border" Property="BorderThickness" Value="0 0 0 1" />
                                            </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupHeaderStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True"
                              Style="{StaticResource ExpanderStyle}">
                        <Expander.Header>
                            <Grid>
                                <Label  Cursor="Hand"
                                        Height="25"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left" />
                                <Label
                                       Height="25"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Right"
                                       Margin="0,0,-65,0" />
                            </Grid>
                        </Expander.Header>
                        <Expander.Content>
                            <ItemsPresenter />
                        </Expander.Content>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>