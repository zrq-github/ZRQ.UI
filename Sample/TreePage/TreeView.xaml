<Page x:Class="TreePage.TreeViewPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TreePage"
      mc:Ignorable="d" 
        MinHeight="500" MinWidth="230" Loaded="PageLoaded">
    <Page.Resources>
        <Style x:Key="MyLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border x:Name="Label_Dockpanel" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <Image Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Uid }" 
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
                                       Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MinHeight }"
                                       Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MinWidth }" />
                                <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,0,0"></TextBlock>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="LightBlue"></Setter>
                                <Setter Property="BorderThickness" Value="1"></Setter>
                                <Setter Property="Background" Value="#FFD7F2FB"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background }"/>
                                <Setter Property="BorderThickness" Value="1"></Setter>
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background }"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Page.ToolTip>
        <ToolTip Name="PageToolTip" Visibility="Collapsed">
            <TextBlock Text="建模大师"/>
        </ToolTip>
    </Page.ToolTip>
    <Grid x:Name="MainGrid" HorizontalAlignment="Left">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="0"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="White">
            <ComboBox Name="TypeComboBox" Margin="2,1,70,1" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Center" SelectionChanged="FilterSelectionChanged" 
                      ItemsSource="{Binding Path=ItemTypeList,UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding Path=TypeNumberSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
            <Grid x:Name="PropertyPanel" Visibility="Visible" HorizontalAlignment="Right" Width="64" Background="White">
                <DockPanel>
                    <Image ToolTip="创建标注" MinHeight="16" MinWidth="16" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand" Margin="0,4,2,0"  Height="25" Width="25" MouseLeftButtonUp="CreateDimenstion_Click" />
                    <Image ToolTip="刷新编号" MinHeight="16" MinWidth="16" HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand" Margin="2,4,0,0"  Height="25" Width="25" MouseLeftButtonUp="refreshNumber_Click" />
                </DockPanel>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="0">
            <Grid.Resources>
                <local:TreeViewLineConverter x:Key="LineConverter"/>
                <!-- Toggle Button -->
                <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                                    <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                                <GradientStop Color="White" Offset="0"/>
                                                <GradientStop Color="Silver" Offset="0.5"/>
                                                <GradientStop Color="LightGray" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                                    <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!-- TreeViewItem -->
                <Style x:Key="{x:Type TreeViewItem}" TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsTypeNumber}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelect}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <!-- Connecting Lines -->
                                    <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                                    <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                                    <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                    <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                                </Grid>
                                <ControlTemplate.Triggers>

                                    <!-- This trigger changes the connecting lines if the item is the last in the list -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                        <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                        <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                                    </DataTrigger>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false"/>
                                            <Condition Property="Width" Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false"/>
                                            <Condition Property="Height" Value="Auto"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background" Value="#FFE3E3E3"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <HierarchicalDataTemplate ItemsSource="{Binding Childs}" DataType="{x:Type local:TreeItemNode }">
                    <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                        <!--Image Visibility="{Binding IsDrawing}" Source="{Binding BitmapImage, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type i:PCToolBarPage}}}"/-->
                        <TextBlock Margin="2,0,2,0" Text="{Binding NodeName}" Tag ="{Binding}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <Style x:Key="MyLabelStyle" TargetType="{x:Type Label}">
                    <Setter Property="Background" Value="#000000FF"></Setter>
                    <Setter Property="Foreground" Value="#A3A09F"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Label}">
                                <Border x:Name="Label_Dockpanel" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border.BitmapEffect>
                                        <BevelBitmapEffect  BevelWidth="5" EdgeProfile="CurvedIn" LightAngle="135" Relief="1" Smoothness="0" >
                                        </BevelBitmapEffect>
                                    </Border.BitmapEffect>
                                    <DockPanel SnapsToDevicePixels="true">
                                        <Image  x:Name="image" Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Uid }" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MinHeight }" Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MinWidth }" >
                                        </Image>
                                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,0,0"></TextBlock>
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="#CC3333"/>
                                        <Setter TargetName="image" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag }"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="false">
                                        <Setter Property="Background" Value="#000000FF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="13*"/>
                <ColumnDefinition Width="10*"/>
            </Grid.ColumnDefinitions>
            <TreeView Name="TypeTree" ItemsSource="{Binding ShowItemList}" 
                      PreviewMouseLeftButtonDown="TypeTree_PreviewMouseLeftButtonDown" 
                      PreviewMouseRightButtonDown="TypeTree_PreviewMouseRightButtonDown"
                      MouseLeftButtonDown="TypeTree_MouseLeftButtonDown"  
                      PreviewMouseRightButtonUp ="TypeTree_PreviewMouseRightButtonUp" 
                      PreviewMouseDoubleClick ="TypeTree_PreviewMouseDoubleClick"  
                      MouseDoubleClick="TypeTree_MouseDoubleClick" Grid.ColumnSpan="2">
                <TreeView.ContextMenu>
                    <ContextMenu x:Name="TreeContextMenu" Opened="TreeViewContextMenu_Opened">
                        <MenuItem Header="调整编号" Click="MenuItem_OnClick" SnapsToDevicePixels="True"/>
                        <MenuItem Header="查看图纸" Click="MenuItem_OnClick" SnapsToDevicePixels="True"/>
                        <MenuItem Header="生成图纸" Click="MenuItem_OnClick" SnapsToDevicePixels="True"/>
                        <MenuItem Header="搜索" Click="Search_Click" SnapsToDevicePixels="True"/>
                    </ContextMenu>
                </TreeView.ContextMenu>
            </TreeView>
            <Grid x:Name="promptGrid" Width="230" Grid.ColumnSpan="2">
            </Grid>
        </Grid>
    </Grid>
</Page>
